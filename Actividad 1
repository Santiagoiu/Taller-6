import sympy
import random

# Función para encontrar las raíces primitivas de un número primo q
def find_primitive_roots(q):
    """Encuentra las raíces primitivas de un número primo q."""
    roots = []
    for alpha in range(2, q):
        if sympy.is_primitive_root(alpha, q):
            roots.append(alpha)
    return roots

# Función para realizar el intercambio de claves Diffie-Hellman
def diffie_hellman(q, alpha):
    """Realiza el intercambio de claves Diffie-Hellman."""
    # Ana y Bob eligen sus claves privadas
    private_key_ana = random.randint(2, q - 2)  # Ana elige su clave privada
    private_key_bob = random.randint(2, q - 2)  # Bob elige su clave privada
    
    # Se calculan las claves públicas
    public_key_ana = pow(alpha, private_key_ana, q)
    public_key_bob = pow(alpha, private_key_bob, q)
    
    # Ana y Bob calculan la clave compartida
    shared_key_ana = pow(public_key_bob, private_key_ana, q)
    shared_key_bob = pow(public_key_ana, private_key_bob, q)
    
    # Verificar que ambas claves compartidas sean iguales
    assert shared_key_ana == shared_key_bob, "Las claves compartidas no son iguales!"
    
    return private_key_ana, public_key_ana, private_key_bob, public_key_bob, shared_key_ana

# Parámetro primo q
q = 65537

# Buscar raíces primitivas de q
roots = find_primitive_roots(q)

# Mostrar al menos 10 raíces primitivas
print("Primeras 10 raíces primitivas de q =", q, "son:")
print(roots[:10])

# Usar una raíz primitiva para el algoritmo Diffie-Hellman (usamos la primera raíz)
alpha = roots[0]  # Usar la primera raíz primitiva encontrada

# Realizar el intercambio de claves Diffie-Hellman
private_key_ana, public_key_ana, private_key_bob, public_key_bob, shared_key = diffie_hellman(q, alpha)

# Mostrar los resultados
print("\n--- Resultados del intercambio de claves Diffie-Hellman ---")
print("Clave privada de Ana:", private_key_ana)
print("Clave pública de Ana:", public_key_ana)
print("Clave privada de Bob:", private_key_bob)
print("Clave pública de Bob:", public_key_bob)
print("Clave compartida:", shared_key)
